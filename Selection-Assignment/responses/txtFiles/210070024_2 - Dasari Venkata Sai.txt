candies
2l+1,2l-1 are odd numbers. Even numbers cannot be generated by this sequence.
If the number n is odd , look for the which spell is used on which number to get n.
By looking at which one out x=(n-1)/2 or y=(n+1)/2 is odd we can say the spell. suppose x is odd spell 2 is used on x to get n, so append 2 to a string 
and make n=x, now by using while loop try to figure out all the spells and store them in a string. But the string we get is in reverse order 
because we are looking at the sequence in reverse direction. so,  reverse the string and that is the answer to our question.

matching:
make a variable count=1
observe the first element of the given string if it is zero, then make count = 0.
if it is a question mark count = count*9.
similarly search for other question marks in string and make count=count*10 whenever you find them.

I solved first question also code for that is :
#include <iostream>
#include <cmath>
#include <string.h>
#include <algorithm>
#include <cstring>
#include <fstream>
using namespace std;
int numOfPossibilities(string str)
{
    if(str[0] == '0') return 0;
    int total = 1;
    for(int i = 0; i < str.length();i++){
        if ( str[i] == '?')
        {
            if(i == 0) total *= 9;
            else total *= 10;
        }  
    }
    return total;
}
int main(){
    ifstream file("input.txt");
    string str;
    file >> str;
    int numOfInputs = stoi(str);
    for(int i = 0;i < numOfInputs; i++)
    {
        file >> str;
        cout << numOfPossibilities(str) << endl;
    }
}
 
